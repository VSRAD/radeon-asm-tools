<UserControl x:Class="VSRAD.Package.ProjectSystem.Profiles.ActionEditor"
             x:Name="EditorRoot"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:opts="clr-namespace:VSRAD.Package.Options"
             xmlns:local="clr-namespace:VSRAD.Package.ProjectSystem.Profiles"
             xmlns:utils="clr-namespace:VSRAD.Package.Utils"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <d:DesignerProperties.DesignStyle>
        <Style TargetType="UserControl">
            <Setter Property="Background" Value="White"/>
        </Style>
    </d:DesignerProperties.DesignStyle>
    <UserControl.Resources>
        <ObjectDataProvider x:Key="StepEnvironments" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="opts:StepEnvironment"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="CopyDirections" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="opts:CopyDirection"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="ActionConditions" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="opts:ActionCondition"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <local:ActionEditorStepDescriptionConverter x:Key="StepDescriptionConverter"/>
        <utils:WpfMagicNumberConverter x:Key="MagicNumberConverter"/>
        <utils:WpfBoolToIndexConverter x:Key="BoolToIndexConverter"/>
        <utils:WpfInverseBoolConverter x:Key="InverseBoolConverter"/>
        <utils:WpfBoolToVisibilityConverter x:Key="VisibleWhenTrueConverter" TrueValue="Visible" FalseValue="Collapsed" />
        <utils:WpfBoolToVisibilityConverter x:Key="VisibleWhenFalseConverter" TrueValue="Collapsed" FalseValue="Visible" />
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="ToolTipService.InitialShowDelay" Value="100"/>
        </Style>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="ToolTipService.InitialShowDelay" Value="100"/>
        </Style>
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="ToolTipService.InitialShowDelay" Value="100"/>
        </Style>
    </UserControl.Resources>
    <StackPanel Orientation="Vertical" x:Name="Root">
        <DockPanel Height="26" Margin="0,4,4,4">
            <Label Content="Steps"/>
            <Button x:Name="NewStepButton" Content="➕" ToolTip="Add step" Width="22" Height="22" HorizontalAlignment="Right" Click="OpenNewStepPopup"/>
        </DockPanel>
        <Popup x:Name="NewStepPopup" PlacementTarget="{Binding ElementName=NewStepButton}" Placement="Left" StaysOpen="False">
            <Menu>
                <Menu.Resources>
                    <Style TargetType="{x:Type MenuItem}">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.MenuTextKey}}"/>
                        <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.MenuKey}}"/>
                    </Style>
                    <Style TargetType="{x:Type Menu}">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.MenuTextKey}}"/>
                        <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.MenuKey}}"/>
                    </Style>
                </Menu.Resources>
                <Menu.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </Menu.ItemsPanel>
                <MenuItem Header="Copy" Height="22" Command="{Binding AddCommand}" CommandParameter="{x:Type opts:CopyStep}" />
                <MenuItem Header="Execute" Height="22" Command="{Binding AddCommand}" CommandParameter="{x:Type opts:ExecuteStep}" />
                <MenuItem Header="Open in Editor" Height="22" Command="{Binding AddCommand}" CommandParameter="{x:Type opts:OpenInEditorStep}" />
                <MenuItem Header="Run Action" Height="22" Command="{Binding AddCommand}" CommandParameter="{x:Type opts:RunActionStep}" />
                <MenuItem Header="Write Debug Target" Height="22" Command="{Binding AddCommand}" CommandParameter="{x:Type opts:WriteDebugTargetStep}" />
                <MenuItem Header="Read Debug Data" Height="22" Command="{Binding AddCommand}" CommandParameter="{x:Type opts:ReadDebugDataStep}" />
                <MenuItem Header="Verify File Modified" Height="22" Command="{Binding AddCommand}" CommandParameter="{x:Type opts:VerifyFileModifiedStep}" />
            </Menu>
        </Popup>
        <Border BorderBrush="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBorderKey}}" BorderThickness="1,1,1,0">
            <ListView ItemsSource="{Binding Steps}" SelectedItem="{Binding SelectedStep}">
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="MinHeight" Value="26" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListViewItem">
                                    <Border BorderBrush="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBorderKey}}" BorderThickness="0,0,0,1">
                                        <Grid x:Name="ItemGrid">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Margin="4,0" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" Grid.Column="0"
                                                       DataContext="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource StepDescriptionConverter}}"
                                                       Text="{Binding Description}" ToolTip="{Binding Description}" Tag="{Binding ElementName=EditorRoot}" />
                                            <StackPanel Orientation="Horizontal" Grid.Column="1" Margin="4,0">
                                                <Button Content="▲" Command="{Binding DataContext.MoveUpCommand, ElementName=Root}" CommandParameter="{TemplateBinding Content}"
                                                        ToolTip="Move up" Width="22" Height="22" Margin="0,0,4,0" />
                                                <Button Content="▼" Command="{Binding DataContext.MoveDownCommand, ElementName=Root}" CommandParameter="{TemplateBinding Content}"
                                                        ToolTip="Move down" Width="22" Height="22" Margin="0,0,4,0" />
                                                <Button Content="❌" Command="{Binding DataContext.DeleteCommand, ElementName=Root}" CommandParameter="{TemplateBinding Content}"
                                                        ToolTip="Delete step" Width="22" Height="22" />
                                            </StackPanel>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="ItemGrid" Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.CommandBarMouseOverBackgroundEndKey}}" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="ItemGrid" Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.CommandBarSelectedKey}}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListBox.Template>
                    <ControlTemplate>
                        <ItemsPresenter />
                    </ControlTemplate>
                </ListBox.Template>
            </ListView>
        </Border>
        <Border Margin="0,8,0,0" Height="Auto" MinHeight="200" Padding="4" BorderBrush="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBorderKey}}" BorderThickness="1">
            <ContentControl x:Name="StepEditor">
                <Binding Path="SelectedStep">
                    <Binding.TargetNullValue>
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">
                            Add a new step by clicking <Bold>➕</Bold>.<LineBreak/>
                            Specify when it is run by changing its position with <Bold>▲</Bold> and <Bold>▼</Bold> arrows.<LineBreak/><LineBreak/>

                            Click on a step to select it and open configuration options.
                        </TextBlock>
                    </Binding.TargetNullValue>
                </Binding>
                <ContentControl.Resources>
                    <DataTemplate DataType="{x:Type opts:CopyStep}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="173"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="34"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="26"/>
                                <RowDefinition Height="26"/>
                                <RowDefinition Height="26"/>
                                <RowDefinition Height="26"/>
                                <RowDefinition Height="26"/>
                                <RowDefinition Height="26"/>
                                <RowDefinition Height="26"/>
                            </Grid.RowDefinitions>
                            <Label Content="Direction:" VerticalContentAlignment="Center" Padding="4,0" Height="22" Grid.Row="0" Grid.Column="0"/>
                            <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" Height="22">
                                <ComboBox ItemsSource="{Binding Source={StaticResource CopyDirections}}" SelectedItem="{Binding Direction, Mode=TwoWay}"
                                          Height="22" Width="160" HorizontalAlignment="Left"/>
                                <TextBlock Margin="4,0" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static vsshell:VsBrushes.CommandBarTextInactiveKey}}"
                                           Visibility="{Binding DataContext.CurrentProfile.General.RunActionsLocally, ElementName=Root, Converter={StaticResource VisibleWhenTrueConverter}}"
                                           Text="Forced to LocalToLocal" ToolTip="Overridden by General -> Run on Localhost"/>
                            </StackPanel>

                            <Label Content="Source Path:" VerticalContentAlignment="Center" Padding="4,0" Height="22" Grid.Row="1" Grid.Column="0"/>
                            <TextBox Text="{Binding SourcePath, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" Height="22" Grid.Row="1" Grid.Column="1"
                                     ToolTip="Relative paths are resolved against General -> Default Local/Remote Working Dir"/>
                            <Button Content="Edit" VerticalContentAlignment="Center" Height="22" Grid.Row="1" Grid.Column="2"
                                    Tag="SourcePath" Command="{Binding DataContext.RichEditCommand, ElementName=Root}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}"/>

                            <Label Content="Target Path:" VerticalContentAlignment="Center" Padding="4,0" Height="22" Grid.Row="2" Grid.Column="0"/>
                            <TextBox Text="{Binding TargetPath, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" Height="22" Grid.Row="2" Grid.Column="1"
                                     ToolTip="Relative paths are resolved against General -> Default Local/Remote Working Dir"/>
                            <Button Content="Edit" VerticalContentAlignment="Center" Height="22" Grid.Row="2" Grid.Column="2"
                                    Tag="TargetPath" Command="{Binding DataContext.RichEditCommand, ElementName=Root}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}"/>

                            <Label Content="Filename Globs To Copy:" VerticalContentAlignment="Center" Padding="4,0" Height="22" Grid.Row="3" Grid.Column="0"/>
                            <TextBox Text="{Binding GlobsToCopy, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" Height="22" Grid.Row="3" Grid.Column="1"
                                     ToolTip="Semicolon separated filename patterns to copy. Examples: '*' -- all files in the top level directory, 'bin/*.exe' -- all files with extension '.exe' in the 'bin' subdirectory, '**/*' -- all files in any subdirectory. The patterns are ignored if the source path is a file."/>
                            <Button Content="Edit" VerticalContentAlignment="Center" Height="22" Grid.Row="3" Grid.Column="2"
                                    Tag="GlobsToCopy" Command="{Binding DataContext.RichEditCommand, ElementName=Root}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}"/>

                            <Label Content="Skip If Not Modified:" VerticalContentAlignment="Center" Padding="4,0" Height="22" Grid.Row="4" Grid.Column="0"/>
                            <CheckBox VerticalContentAlignment="Center" Height="22" Grid.Row="4" Grid.Column="1"
                                      IsChecked="{Binding SkipIfNotModified, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label Content="Preserve Timestamps:" VerticalContentAlignment="Center" Padding="4,0" Height="22" Grid.Row="5" Grid.Column="0"/>
                            <CheckBox VerticalContentAlignment="Center" Height="22" Grid.Row="5" Grid.Column="1"
                                      IsChecked="{Binding PreserveTimestamps, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            
                            <Label Content="Use Compression:" VerticalContentAlignment="Center" Padding="4,0" Height="22" Grid.Row="6" Grid.Column="0"/>
                            <CheckBox VerticalContentAlignment="Center" Height="22" Grid.Row="6" Grid.Column="1"
                                      IsChecked="{Binding UseCompression, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type opts:ExecuteStep}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="173"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="34"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="26"/>
                                <RowDefinition Height="26"/>
                                <RowDefinition Height="26"/>
                                <RowDefinition Height="26"/>
                                <RowDefinition Height="26"/>
                                <RowDefinition>
                                    <!-- Wait for Completion is not configurable for remote execution (see VSRAD.DebugServer.IPC.Commands) -->
                                    <RowDefinition.Style>
                                        <Style TargetType="{x:Type RowDefinition}">
                                            <Setter Property="Height" Value="26" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Environment}" Value="Remote">
                                                    <Setter Property="Height" Value="0" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </RowDefinition.Style>
                                </RowDefinition>
                                <RowDefinition Height="26"/>
                            </Grid.RowDefinitions>
                            <Label Content="Environment:" VerticalContentAlignment="Center" Padding="4,0" Height="22" Grid.Row="0" Grid.Column="0"/>
                            <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" Height="22">
                                <ComboBox ItemsSource="{Binding Source={StaticResource StepEnvironments}}" SelectedItem="{Binding Environment, Mode=TwoWay}"
                                          Height="22" Width="160" HorizontalAlignment="Left"/>
                                <TextBlock Margin="4,0" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static vsshell:VsBrushes.CommandBarTextInactiveKey}}"
                                           Visibility="{Binding DataContext.CurrentProfile.General.RunActionsLocally, ElementName=Root, Converter={StaticResource VisibleWhenTrueConverter}}"
                                           Text="Forced to Local" ToolTip="Overridden by General -> Run on Localhost"/>
                            </StackPanel>

                            <Label Content="Executable:" VerticalContentAlignment="Center" Padding="4,0" Height="22" Grid.Row="1" Grid.Column="0"/>
                            <TextBox Text="{Binding Executable, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" Height="22" Grid.Row="1" Grid.Column="1" />
                            <Button Content="Edit" VerticalContentAlignment="Center" Height="22" Grid.Row="1" Grid.Column="2"
                                    Tag="Executable" Command="{Binding DataContext.RichEditCommand, ElementName=Root}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}"/>

                            <Label Content="Arguments:" VerticalContentAlignment="Center" Padding="4,0" Height="22" Grid.Row="2" Grid.Column="0"/>
                            <TextBox Text="{Binding Arguments, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" Height="22" Grid.Row="2" Grid.Column="1" />
                            <Button Content="Edit" VerticalContentAlignment="Center" Height="22" Grid.Row="2" Grid.Column="2"
                                    Tag="Arguments" Command="{Binding DataContext.RichEditCommand, ElementName=Root}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}"/>

                            <Label Content="Working Directory:" VerticalContentAlignment="Center" Padding="4,0" Height="22" Grid.Row="3" Grid.Column="0"/>
                            <TextBox Text="{Binding WorkingDirectory, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" Height="22" Grid.Row="3" Grid.Column="1"
                                     ToolTip="If not specified, set to General -> Default Local/Remote Working Dir"/>
                            <Button Content="Edit" VerticalContentAlignment="Center" Height="22" Grid.Row="3" Grid.Column="2"
                                    Tag="WorkingDirectory" Command="{Binding DataContext.RichEditCommand, ElementName=Root}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}"/>

                            <Label Content="Run as Administrator:" VerticalContentAlignment="Center" Padding="4,0" Height="22" Grid.Row="4" Grid.Column="0"/>
                            <CheckBox VerticalContentAlignment="Center" Height="22" Grid.Row="4" Grid.Column="1"
                                      IsChecked="{Binding RunAsAdmin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label Content="Wait for Completion:" VerticalContentAlignment="Center" Padding="4,0" Height="22" Grid.Row="5" Grid.Column="0"/>
                            <CheckBox VerticalContentAlignment="Center" Height="22" Grid.Row="5" Grid.Column="1"
                                      IsChecked="{Binding WaitForCompletion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label Content="Timeout in Seconds:" VerticalContentAlignment="Center" Padding="4,0" Height="22" Grid.Row="6" Grid.Column="0"/>
                            <TextBox Text="{Binding TimeoutSecs, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" HorizontalAlignment="Left"
                                     IsEnabled="{Binding WaitForCompletion}" ToolTip="0 - timeout disabled" Height="22" Width="160" Grid.Row="6" Grid.Column="1"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type opts:OpenInEditorStep}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="173"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="34"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="26"/>
                                <RowDefinition Height="26"/>
                            </Grid.RowDefinitions>
                            <Label Content="Path:" VerticalContentAlignment="Center" Padding="4,0" Height="22" Grid.Row="0" Grid.Column="0"/>
                            <TextBox Text="{Binding Path, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" Height="22" Grid.Row="0" Grid.Column="1" />
                            <Button Content="Edit" VerticalContentAlignment="Center" Height="22" Grid.Row="0" Grid.Column="2"
                                    Tag="Path" Command="{Binding DataContext.RichEditCommand, ElementName=Root}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}"/>

                            <Label Content="Line Marker:" VerticalContentAlignment="Center" Padding="4,0" Height="22" Grid.Row="1" Grid.Column="0"/>
                            <TextBox Text="{Binding LineMarker, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" HorizontalAlignment="Left"
                                     Height="22" Width="160" Grid.Row="1" Grid.Column="1" />
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type opts:RunActionStep}">
                        <Grid>
                            <Grid.Resources>
                                <Style TargetType="{x:Type FrameworkElement}" x:Key="DisableWhenUnconditional">
                                    <Setter Property="IsEnabled" Value="True"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Condition}" Value="{x:Static opts:ActionCondition.Always}">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="173"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="34"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="26"/>
                                <RowDefinition Height="26"/>
                                <RowDefinition Height="26"/>
                                <RowDefinition Height="26"/>
                            </Grid.RowDefinitions>
                            <Label Content="Action:" VerticalContentAlignment="Center" Padding="4,0" Height="22" Grid.Row="0" Grid.Column="0"/>
                            <ComboBox ItemsSource="{Binding DataContext.RunActionNames, ElementName=Root, Mode=OneWay}"
                                      SelectedItem="{Binding Name, Mode=TwoWay}" Height="22" Width="160" HorizontalAlignment="Left" Grid.Row="0" Grid.Column="1"/>

                            <Label Content="Condition:" VerticalContentAlignment="Center" Padding="4,0" Height="22" Grid.Row="1" Grid.Column="0"/>
                            <ComboBox ItemsSource="{Binding Source={StaticResource ActionConditions}}" SelectedItem="{Binding Condition, Mode=TwoWay}"
                                      Height="22" Width="160" HorizontalAlignment="Left" Grid.Row="1" Grid.Column="1"/>

                            <Label Content="Condition Left-Hand Side:" VerticalContentAlignment="Center" Padding="4,0" Height="22" Grid.Row="2" Grid.Column="0"/>
                            <TextBox VerticalContentAlignment="Center" Height="22" Grid.Row="2" Grid.Column="1" Style="{StaticResource DisableWhenUnconditional}"
                                     Text="{Binding ConditionLhs, UpdateSourceTrigger=PropertyChanged}"/>
                            <Button Content="Edit" VerticalContentAlignment="Center" Height="22" Grid.Row="2" Grid.Column="2" Style="{StaticResource DisableWhenUnconditional}"
                                    Tag="ConditionLhs" Command="{Binding DataContext.RichEditCommand, ElementName=Root}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}"/>

                            <Label Content="Condition Right-Hand Side:" VerticalContentAlignment="Center" Padding="4,0" Height="22" Grid.Row="3" Grid.Column="0"/>
                            <TextBox VerticalContentAlignment="Center" Height="22" Grid.Row="3" Grid.Column="1" Style="{StaticResource DisableWhenUnconditional}"
                                     Text="{Binding ConditionRhs, UpdateSourceTrigger=PropertyChanged}"/>
                            <Button Content="Edit" VerticalContentAlignment="Center" Height="22" Grid.Row="3" Grid.Column="2" Style="{StaticResource DisableWhenUnconditional}"
                                    Tag="ConditionRhs" Command="{Binding DataContext.RichEditCommand, ElementName=Root}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type opts:WriteDebugTargetStep}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="173"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="34"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="26"/>
                                <RowDefinition Height="26"/>
                            </Grid.RowDefinitions>
                            <Label Content="Breakpoint List Path:" VerticalContentAlignment="Center" Padding="4,0" Height="22" Grid.Row="0" Grid.Column="0"/>
                            <TextBox Text="{Binding BreakpointListPath, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" Height="22" Grid.Row="0" Grid.Column="1" />
                            <Button Content="Edit" VerticalContentAlignment="Center" Height="22" Grid.Row="0" Grid.Column="2"
                                    Tag="BreakpointListPath" Command="{Binding DataContext.RichEditCommand, ElementName=Root}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}"/>

                            <Label Content="Watch List Path:" VerticalContentAlignment="Center" Padding="4,0" Height="22" Grid.Row="1" Grid.Column="0"/>
                            <TextBox Text="{Binding WatchListPath, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" Height="22" Grid.Row="1" Grid.Column="1" />
                            <Button Content="Edit" VerticalContentAlignment="Center" Height="22" Grid.Row="1" Grid.Column="2"
                                    Tag="WatchListPath" Command="{Binding DataContext.RichEditCommand, ElementName=Root}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type opts:ReadDebugDataStep}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="173"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="34"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="26"/>
                                <RowDefinition Height="26"/>
                                <RowDefinition Height="26"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Label Content="Output Type:" VerticalContentAlignment="Center" Padding="4,0" Height="22" Grid.Row="0" Grid.Column="0"/>
                            <ComboBox Height="22" Width="160" HorizontalAlignment="Left" Grid.Row="0" Grid.Column="1"
                                        ToolTip="{Binding Path=SelectedItem.ToolTip, RelativeSource={RelativeSource Self}}"
                                        SelectedIndex="{Binding BinaryOutput, Converter={StaticResource BoolToIndexConverter}, Mode=TwoWay}">
                                <ComboBoxItem Content="Binary" ToolTip="32-bit values are packed into consecutive DWORDs"/>
                                <ComboBoxItem Content="Text" ToolTip="Each 32-bit value is written on a separate line as a hexadecimal string (0x...)"/>
                            </ComboBox>

                            <Label Content="Output Offset:" VerticalContentAlignment="Center" Padding="4,0" Height="22" Grid.Row="1" Grid.Column="0"/>
                            <TextBox Text="{Binding OutputOffset, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" HorizontalAlignment="Left"
                                     ToolTip="How many values should be skipped at the start of the file (in bytes for binary output mode, in lines for text output mode)"
                                     Height="22" Width="160" Grid.Row="1" Grid.Column="1"/>

                            <Label Content="Wave Hit Magic Number:" VerticalContentAlignment="Center" Padding="4,0" Height="22" Grid.Row="2" Grid.Column="0"/>
                            <TextBox Text="{Binding CheckMagicNumber, Converter={StaticResource MagicNumberConverter}, UpdateSourceTrigger=PropertyChanged}"
                                     ToolTip="The value expected to be found in the first lane of a wave that has hit a breakpoint"
                                     VerticalContentAlignment="Center" HorizontalAlignment="Left" Height="22" Width="160" Grid.Row="2" Grid.Column="1"/>

                            <local:BuiltinActionFileEditor DataContext="{Binding OutputFile}"
                                                           MacroEditor="{Binding DataContext.MacroEditor, ElementName=Root}"
                                                           CurrentProfile="{Binding DataContext.CurrentProfile, ElementName=Root}"
                                                           Header="Output" Grid.Row="3" Grid.ColumnSpan="3" />

                            <local:BuiltinActionFileEditor DataContext="{Binding WatchesFile}"
                                                           MacroEditor="{Binding DataContext.MacroEditor, ElementName=Root}"
                                                           CurrentProfile="{Binding DataContext.CurrentProfile, ElementName=Root}"
                                                           Header="Watches" Grid.Row="4" Grid.ColumnSpan="3" />

                            <local:BuiltinActionFileEditor DataContext="{Binding DispatchParamsFile}"
                                                           MacroEditor="{Binding DataContext.MacroEditor, ElementName=Root}"
                                                           CurrentProfile="{Binding DataContext.CurrentProfile, ElementName=Root}"
                                                           Header="Dispatch Params" Grid.Row="5" Grid.ColumnSpan="3" />
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type opts:VerifyFileModifiedStep}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="173"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="34"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="26"/>
                                <RowDefinition Height="26"/>
                                <RowDefinition Height="26"/>
                                <RowDefinition Height="26"/>
                            </Grid.RowDefinitions>

                            <Label Content="Location:" VerticalContentAlignment="Center" Padding="4,0" Height="22" Grid.Row="0" Grid.Column="0"/>
                            <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" Height="22">
                                <ComboBox ItemsSource="{Binding Source={StaticResource StepEnvironments}}" SelectedItem="{Binding Location, Mode=TwoWay}"
                                          Height="22" Width="160" HorizontalAlignment="Left"/>
                                <TextBlock Margin="4,0" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static vsshell:VsBrushes.CommandBarTextInactiveKey}}"
                                           Visibility="{Binding CurrentProfile.General.RunActionsLocally, ElementName=Root, Converter={StaticResource VisibleWhenTrueConverter}}"
                                           Text="Forced to Local" ToolTip="Overridden by General -> Run on Localhost"/>
                            </StackPanel>

                            <Label Content="Path:" VerticalContentAlignment="Center" Padding="4,0" Height="22" Grid.Row="1" Grid.Column="0"/>
                            <TextBox Text="{Binding Path, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" Height="22" Grid.Row="1" Grid.Column="1" />
                            <Button Content="Edit" VerticalContentAlignment="Center" Height="22" Grid.Row="1" Grid.Column="2"
                                    Tag="Path" Command="{Binding DataContext.RichEditCommand, ElementName=Root}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}"/>

                            <Label Content="Abort Action If Not Modified:" VerticalContentAlignment="Center" Padding="4,0" Height="22" Grid.Row="2" Grid.Column="0"/>
                            <CheckBox VerticalContentAlignment="Center" Height="22" Grid.Row="2" Grid.Column="1"
                                      IsChecked="{Binding AbortIfNotModifed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label Content="Message If Not Modified:" VerticalContentAlignment="Center" Padding="4,0" Height="22" Grid.Row="3" Grid.Column="0"/>
                            <TextBox Text="{Binding ErrorMessage, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" Height="22" Grid.Row="3" Grid.Column="1" />
                            <Button Content="Edit" VerticalContentAlignment="Center" Height="22" Grid.Row="3" Grid.Column="2"
                                    Tag="ErrorMessage" Command="{Binding DataContext.RichEditCommand, ElementName=Root}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}"/>
                        </Grid>
                    </DataTemplate>
                </ContentControl.Resources>
            </ContentControl>
        </Border>
    </StackPanel>
</UserControl>
